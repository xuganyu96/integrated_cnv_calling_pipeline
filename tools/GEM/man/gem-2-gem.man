.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.07)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "GEM-2-GEM 1"
.TH GEM-2-GEM 1 "2013-04-06" "Binary pre-release 3" "The GEnomic Multi-tool (GEM) library"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
gem\-2\-gem \-\- A program to reprocess records in <\s-1GEM\s0 alignment format>
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
gem\-2\-gem  [\fI\s-1OPTIONS\s0\fR]\ \ [\fB\-i\fR\ \fIinput_file\fR\ |\ \fB\-m\fR\ \fIinput_file_1\fR,\ \fI...\fR]\ [\fB\-o\fR\ \fIoutput_prefix\fR]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The following options are available (\fIto be completed\fR):
.SS "Options relevant to input (only one of \fB\-i\fP and \fB\-m\fP can be specified)"
.IX Subsection "Options relevant to input (only one of -i and -m can be specified)"
.IP "\fB\-i\fR  \fIinput_sequences\fR   (string, default=\fBstdin\fR)" 4
.IX Item "-i  input_sequences   (string, default=stdin)"
The file in \s-1GEM\s0 format that you want to reprocess. This option is incompatible with option \fB\-m\fR.
.SS "Options relevant to multi-threading"
.IX Subsection "Options relevant to multi-threading"
.IP "\fB\-\-lines\-per\-block\fR  \fIlines\fR   (non-negative number, default=\fB50000\fR)" 4
.IX Item "--lines-per-block  lines   (non-negative number, default=50000)"
During processing, the input file is split into chunks; this option specifies their size.
Relevant only when multi-threaded conversion is performed.
.IP "\fB\-T|\-\-threads\fR  \fIthreads\fR   (non-negative number, default=\fB1\fR)" 4
.IX Item "-T|--threads  threads   (non-negative number, default=1)"
The number of threads to be used when reprocessing.
.SS "Options relevant to output"
.IX Subsection "Options relevant to output"
.IP "\fB\-o|\-\-output\fR  \fIoutput_file\fR   (string, default=\fBstdout\fR)" 4
.IX Item "-o|--output  output_file   (string, default=stdout)"
The name of the generated \s-1GEM\s0 alignment file.
.SS "Options relevant to alignment refinement"
.IX Subsection "Options relevant to alignment refinement"
.IP "\fB\-I|\-\-index\fR  \fIindex_file\fR   (string, \fImandatory with options \f(BI\-r\fI or \f(BI\-v\fI\fR)" 4
.IX Item "-I|--index  index_file   (string, mandatory with options -r or -v)"
The name of the \s-1GEM\s0 archive which should be used for realignment/correctness checks.
.IP "\fB\-v|\-\-verify\fR" 4
.IX Item "-v|--verify"
Check correctness of the alignments contained in the input.
.IP "\fB\-r|\-\-realign\fR" 4
.IX Item "-r|--realign"
Realign simplified alignments in the output, annotating them with additional information (like substitutions) which
might have been stripped out during previous mapping/processing stages.
.SS "Commands (are executed in the specified order, and can be repeated)"
.IX Subsection "Commands (are executed in the specified order, and can be repeated)"
.IP "\fB\-s|\-\-score\fR \fIrule_1\fR, ..." 4
.IX Item "-s|--score rule_1, ..."
.PD 0
.IP "    with" 4
.IX Item "    with"
.IP "      \fIrule\fR := \fIsign\fR \fIwhat\fR" 4
.IX Item "      rule := sign what"
.IP "      \fIsign\fR := \fB+\fR | \fB\-\fR" 4
.IX Item "      sign := + | -"
.IP "      \fIwhat\fR := \fBU\fR | \fBu\fR | \fBS\fR | \fBs\fR | \fBe\fR | \fBa\fR | \fBh\fR | \fBb\fR | \fBi\fR | \fBt\fR" 4
.IX Item "      what := U | u | S | s | e | a | h | b | i | t"
.PD
Annotate the alignments found in the input with the specified score (up to 16 bits).
Each element in the list specifies a bitfield, whose width and content varies depending on the chosen rule.
The score is composed by concatenating, from left to right, the bitfields appearing in the list.
When computing the score on a specific alignment, the bitfield will be filled with the appropriate value,
depending on the rule chosen and the alignment.
If the rule is preceded by a \fB+\fR sign, the bitfield is unchanged; if the rule is preceded by a \fB\-\fR sign,
the bitfield is bitwise negated before concatenation.
.Sp
The widths and meaning of the possible rules are as follows:
.RS 4
.IP "\(bu" 4
\&\fBU\fR\ (\fI1\ bit\fR): Is the alignment unique within the number of specified mismatch strata?
.IP "\(bu" 4
\&\fBu\fR\ (\fI1\ bit\fR): Is the alignment unique within the best stratum?
.IP "\(bu" 4
\&\fBS\fR\ (\fI2\ bits\fR): The number of strata spanned by the alignments for this query
.IP "\(bu" 4
\&\fBs\fR\ (\fI2\ bits\fR): The number of strata between the one the considered alignment belongs to, and the best one
.IP "\(bu" 4
\&\fBe\fR\ (\fI1\ bit\fR): Does the alignment being considered belong to an exhaustive stratum?
.IP "\(bu" 4
\&\fBa\fR\ (\fI2\ bits\fR): The average quality of nucleotide substitutions in the alignment
.IP "\(bu" 4
\&\fBh\fR\ (\fI2\ bits\fR): The highest quality of nucleotide substitutions in the alignment
.IP "\(bu" 4
\&\fBb\fR\ (\fI3\ bits\fR): If one stratifies the alignments for this query by number of aligned bases, how many strata are there from this alignment to the best one?
.IP "\(bu" 4
\&\fBi\fR\ (\fI3\ bits\fR): If one stratifies the alignments for this query by cumulative intron length, how many strata are there from this alignment to the best one?
.IP "\(bu" 4
\&\fBt\fR\ (\fI1\ bit\fR): Are there other alignments for this query with the same score?
.IP "\(bu" 4
\&\fB0\fR\ (\fI1\ bit\fR): Add a constant bit with value zero
.IP "\(bu" 4
\&\fB1\fR\ (\fI1\ bit\fR): Add a constant bit with value one.
.RE
.RS 4
.Sp
All the quantities are suitably rescaled or truncated to the specified number of bits (for instance, for the \fBs\fR option one will have that distances >= 3 are transformed to 3).
.Sp
For instance, the score
.Sp
    \fB\-b,\-h,\-a,\-s\fR
.Sp
(re)sorts the existing alignments by decreasing number of aligned bases, increasing highest quality of nucleotide substitutions, increasing average quality of nucleotide
substitutions, and decreasing strata distance with respect to the best match.
.Sp
On the other hand, the score
.Sp
    \fB+U,+u,\-s,\-t,+1,\-i,\-a\fR
.Sp
maximizes uniqueness.
.RE
.IP "\fB\-\-show\-license\fR" 4
.IX Item "--show-license"
Prints license and exits without performing other actions.
.IP "\fB\-h|\-\-help\fR" 4
.IX Item "-h|--help"
Print help information and exit without doing anything else.
.SH "AUTHORS"
.IX Header "AUTHORS"
Paolo Ribeca <mailto:paolo.ribeca@gmail.com>.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
<gem-mapper>, <gem-rna-mapper>, and <the \s-1GEM\s0 website>.
